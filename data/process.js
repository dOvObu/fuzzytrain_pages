data = [
	{
		title: 'Тут помню, а тут не помню',
		date: [12,3,2019, 16,44],
		content: [
			{punchline : `Первое о чём стоит позаботиться, это способ сохранения прогресса.`},
			{img : `https://images.unsplash.com/photo-1500051638674-ff996a0ec29e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1092&q=80`},
			{text : `Мне очень понравился формат json своей простотой и близостью к типам данных, используемых в ООП.
			Этот формат отлично подходит для данных с изменчивой структурой, что збс для этапа экспериментов и придумывания.
			Поэтому, совсем недавно был сделан рекурсивный тип данных Mobj, который позволяет хранить в нём int-ы, float-ы, char-ы, строки, массивы Mobj-ектов и Map-ы с парами <строка, Mobj>.`},
			
			{title : "C++ code"},
			{code :
`	Mobj o = {
		{"десять",10},
		{"пи",3.1415926536f},
		{"строка","it's a string"},
		{"символ",'Q'}
	};//etc.
	std::cout << o["десять"] << ' ' << o["пи"] << '\\n';
	std::cout << o << '\\n';`
			},
			
			{text :
				`Прикручиваем к этому простенький парсер, и вот! Теперь у нас есть объект, характеристики которого можно хранить на жёстком диске и восстанавливать из него. Более того, форма такого объекта настолько не чёткая, что им можно делать слепок с почти-что любого объекта.`
			},
			{text :
				`Сейчас, Mobj-е нельзя хранить ссылки на другие Mobj-ы, но это может и не понадобится (я буду стараться избегать такой необходимости).
			
				https://github.com/mOgOm/m_object`
			}
		]
	}
]